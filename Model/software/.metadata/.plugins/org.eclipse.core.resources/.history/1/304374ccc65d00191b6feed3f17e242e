/*
 * fft.c
 *
 *  Created on: 2018年11月27日
 *      Author: 14409
 */
/*
 * fft.c
 *
 *  Created on: 2017年3月25日
 *      Author: shuai
 */

#include "fft.h"
#include "lcd.h"
#include "touch.h"
#include "key.h"


///////////fft总控制///////////////
u16 j=0;
extern int pause1;
void FFTCtrl(){
	j=0;
	FFT_FIFOCtrl();
	usleep(1000);
	if(!(pause1%2))
	 FFT_RAMCtrl();
}
///////////fft fifo控制///////////////
void FFT_FIFOCtrl(){
	IOWR(FFT_TOP_BASE, fft_fifo_rd, 1);
	while((IORD(FFT_TOP_BASE, fft_fifo_rdem)&0x0001)==0){}
	IOWR(FFT_TOP_BASE, fft_fifo_rd, 0);

	IOWR(FFT_TOP_BASE, fft_fifo_wr, 1);
	while((IORD(FFT_TOP_BASE, fft_fifo_wrfu)&0x0001)==0){}
	IOWR(FFT_TOP_BASE, fft_fifo_wr, 0);

	IOWR(FFT_TOP_BASE, fft_fifo_rd, 1);
	while((IORD(FFT_TOP_BASE, fft_fifo_rdem)&0x0001)==0){}
	IOWR(FFT_TOP_BASE, fft_fifo_rd, 0);
}
///////////fft ram控制///////////////

extern int pause1;
int stop1=0;
void FFT_RAMCtrl(){
	u16 i;
	u16 i_pos;
    float max_FFTDATA=0;
	u32 rddata;
	u16 freq;
	int unfreq=0;
	float power[256]={0};
    float power_sum=0;
	float shizhen=0;
	float shizhendu=0;
	float shizhendu_n=0;
	float shizhendu_n1;
	int exp;
	int dist;//   fft的分辨率
	IOWR(FFT_TOP_BASE, fft_ram_rd, 1);
	exp = (IORD(FFT_TOP_BASE, fft_exp)) & 0x003F;
	if(exp >= 32)
		exp = exp - 64;
	printf("exp: %d\n", exp);
	if(model==4)
		dist=20;
	else
		dist=50;
//	float sum = 0;
	if(!(pause1%2))
	   lcdRectClear(100, 150, 500, 500, BACKGROUND);
	for(i = 0; i < 256; i++){
		IOWR(FFT_TOP_BASE, fft_ram_rdad, i);
		rddata = IORD(FFT_TOP_BASE, fft_ram_rdda);
		FFTData[i] = 1.0 * sqrt((int)rddata) * pow(2, -exp) / 2000;
		//printf("%f\n",FFTData[i]);
		if(FFTData[i]>=max_FFTDATA){
		      max_FFTDATA=FFTData[i];
		      i_pos=i;
		}
	}
	printf("个数 %d\n",i_pos);
	printf("功率 %f\n",FFTData[i_pos]);



	IOWR(FFT_TOP_BASE, fft_ram_rd, 0);

}




