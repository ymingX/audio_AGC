--altsquare CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DATA_WIDTH=16 DEVICE_FAMILY="Cyclone IV E" PIPELINE=0 REPRESENTATION="SIGNED" RESULT_WIDTH=32 data result
--VERSION_BEGIN 17.0 cbx_altsquare 2017:04:25:18:06:29:SJ cbx_cycloneii 2017:04:25:18:06:29:SJ cbx_lpm_add_sub 2017:04:25:18:06:29:SJ cbx_mgl 2017:04:25:18:09:28:SJ cbx_nadder 2017:04:25:18:06:30:SJ cbx_padd 2017:04:25:18:06:30:SJ cbx_stratix 2017:04:25:18:06:30:SJ cbx_stratixii 2017:04:25:18:06:30:SJ cbx_util_mgl 2017:04:25:18:06:30:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.


FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 130 
SUBDESIGN altsquare_57e
( 
	data[15..0]	:	input;
	result[31..0]	:	output;
) 
VARIABLE
	add1_result[29..0]	:	WIRE;
	add13_result[17..0]	:	WIRE;
	add17_result[11..0]	:	WIRE;
	add21_result[7..0]	:	WIRE;
	add25_result[9..0]	:	WIRE;
	add29_result[2..0]	:	WIRE;
	add5_result[26..0]	:	WIRE;
	add9_result[21..0]	:	WIRE;
	sft10a[21..0] : soft;
	sft11a[21..0] : soft;
	sft12a[21..0] : soft;
	sft14a[17..0] : soft;
	sft15a[17..0] : soft;
	sft16a[17..0] : soft;
	sft18a[11..0] : soft;
	sft19a[11..0] : soft;
	sft20a[11..0] : soft;
	sft22a[7..0] : soft;
	sft23a[7..0] : soft;
	sft24a[7..0] : soft;
	sft26a[9..0] : soft;
	sft27a[9..0] : soft;
	sft28a[9..0] : soft;
	sft2a[29..0] : soft;
	sft30a[2..0] : soft;
	sft31a[2..0] : soft;
	sft32a[2..0] : soft;
	sft3a[29..0] : soft;
	sft4a[29..0] : soft;
	sft6a[26..0] : soft;
	sft7a[26..0] : soft;
	sft8a[26..0] : soft;
	w100w[0..0]	: WIRE;
	w104w[0..0]	: WIRE;
	w107w[0..0]	: WIRE;
	w112w[0..0]	: WIRE;
	w116w[0..0]	: WIRE;
	w11w[0..0]	: WIRE;
	w120w[0..0]	: WIRE;
	w124w[0..0]	: WIRE;
	w128w[0..0]	: WIRE;
	w132w[0..0]	: WIRE;
	w136w[0..0]	: WIRE;
	w139w[0..0]	: WIRE;
	w144w[0..0]	: WIRE;
	w148w[0..0]	: WIRE;
	w152w[0..0]	: WIRE;
	w156w[0..0]	: WIRE;
	w15w[0..0]	: WIRE;
	w160w[0..0]	: WIRE;
	w164w[0..0]	: WIRE;
	w168w[0..0]	: WIRE;
	w172w[0..0]	: WIRE;
	w175w[0..0]	: WIRE;
	w180w[0..0]	: WIRE;
	w184w[0..0]	: WIRE;
	w188w[0..0]	: WIRE;
	w192w[0..0]	: WIRE;
	w196w[0..0]	: WIRE;
	w19w[0..0]	: WIRE;
	w200w[0..0]	: WIRE;
	w204w[0..0]	: WIRE;
	w208w[0..0]	: WIRE;
	w212w[0..0]	: WIRE;
	w215w[0..0]	: WIRE;
	w220w[0..0]	: WIRE;
	w224w[0..0]	: WIRE;
	w228w[0..0]	: WIRE;
	w232w[0..0]	: WIRE;
	w236w[0..0]	: WIRE;
	w240w[0..0]	: WIRE;
	w244w[0..0]	: WIRE;
	w248w[0..0]	: WIRE;
	w24w[0..0]	: WIRE;
	w252w[0..0]	: WIRE;
	w256w[0..0]	: WIRE;
	w259w[0..0]	: WIRE;
	w264w[0..0]	: WIRE;
	w268w[0..0]	: WIRE;
	w272w[0..0]	: WIRE;
	w276w[0..0]	: WIRE;
	w280w[0..0]	: WIRE;
	w284w[0..0]	: WIRE;
	w288w[0..0]	: WIRE;
	w28w[0..0]	: WIRE;
	w292w[0..0]	: WIRE;
	w296w[0..0]	: WIRE;
	w300w[0..0]	: WIRE;
	w304w[0..0]	: WIRE;
	w307w[0..0]	: WIRE;
	w312w[0..0]	: WIRE;
	w316w[0..0]	: WIRE;
	w320w[0..0]	: WIRE;
	w324w[0..0]	: WIRE;
	w328w[0..0]	: WIRE;
	w32w[0..0]	: WIRE;
	w332w[0..0]	: WIRE;
	w336w[0..0]	: WIRE;
	w340w[0..0]	: WIRE;
	w344w[0..0]	: WIRE;
	w348w[0..0]	: WIRE;
	w352w[0..0]	: WIRE;
	w356w[0..0]	: WIRE;
	w359w[0..0]	: WIRE;
	w35w[0..0]	: WIRE;
	w364w[0..0]	: WIRE;
	w368w[0..0]	: WIRE;
	w372w[0..0]	: WIRE;
	w376w[0..0]	: WIRE;
	w380w[0..0]	: WIRE;
	w384w[0..0]	: WIRE;
	w388w[0..0]	: WIRE;
	w392w[0..0]	: WIRE;
	w396w[0..0]	: WIRE;
	w400w[0..0]	: WIRE;
	w404w[0..0]	: WIRE;
	w408w[0..0]	: WIRE;
	w40w[0..0]	: WIRE;
	w412w[0..0]	: WIRE;
	w415w[0..0]	: WIRE;
	w420w[0..0]	: WIRE;
	w424w[0..0]	: WIRE;
	w428w[0..0]	: WIRE;
	w432w[0..0]	: WIRE;
	w436w[0..0]	: WIRE;
	w440w[0..0]	: WIRE;
	w444w[0..0]	: WIRE;
	w448w[0..0]	: WIRE;
	w44w[0..0]	: WIRE;
	w452w[0..0]	: WIRE;
	w456w[0..0]	: WIRE;
	w460w[0..0]	: WIRE;
	w464w[0..0]	: WIRE;
	w468w[0..0]	: WIRE;
	w472w[0..0]	: WIRE;
	w475w[0..0]	: WIRE;
	w480w[0..0]	: WIRE;
	w484w[0..0]	: WIRE;
	w488w[0..0]	: WIRE;
	w48w[0..0]	: WIRE;
	w493w[0..0]	: WIRE;
	w498w[0..0]	: WIRE;
	w503w[0..0]	: WIRE;
	w508w[0..0]	: WIRE;
	w513w[0..0]	: WIRE;
	w518w[0..0]	: WIRE;
	w523w[0..0]	: WIRE;
	w528w[0..0]	: WIRE;
	w52w[0..0]	: WIRE;
	w533w[0..0]	: WIRE;
	w538w[0..0]	: WIRE;
	w543w[0..0]	: WIRE;
	w548w[0..0]	: WIRE;
	w552w[0..0]	: WIRE;
	w558w[0..0]	: WIRE;
	w55w[0..0]	: WIRE;
	w560w	: WIRE;
	w585w	: WIRE;
	w60w[0..0]	: WIRE;
	w64w[0..0]	: WIRE;
	w68w[0..0]	: WIRE;
	w72w[0..0]	: WIRE;
	w76w[0..0]	: WIRE;
	w79w[0..0]	: WIRE;
	w84w[0..0]	: WIRE;
	w88w[0..0]	: WIRE;
	w92w[0..0]	: WIRE;
	w961w[32..0]	: WIRE;
	w96w[0..0]	: WIRE;

BEGIN 
	add1_result[] = sft2a[].out + sft3a[].out;
	add13_result[] = sft14a[].out + sft15a[].out;
	add17_result[] = sft18a[].out + sft19a[].out;
	add21_result[] = sft22a[].out + sft23a[].out;
	add25_result[] = sft26a[].out + sft27a[].out;
	add29_result[] = sft30a[].out + sft31a[].out;
	add5_result[] = sft6a[].out + sft7a[].out;
	add9_result[] = sft10a[].out + sft11a[].out;
	sft10a[].in = ( w585w, ( w424w[0..0], ( w420w[0..0], ( (! w533w[0..0]), ( (! w528w[0..0]), ( w316w[0..0], ( sft28a[7..7].out, ( sft28a[6..6].out, ( sft20a[9..9].out, ( sft24a[6..6].out, ( sft24a[5..5].out, ( sft24a[4..4].out, ( sft24a[3..3].out, ( sft24a[2..2].out, ( w240w[0..0], ( w200w[0..0], ( w196w[0..0], ( w160w[0..0], ( w156w[0..0], ( w124w[0..0], ( w120w[0..0], w92w[0..0])))))))))))))))))))));
	sft11a[].in = ( w585w, ( w585w, ( sft16a[17..17].out, ( w368w[0..0], ( sft28a[9..9].out, ( sft28a[8..8].out, ( sft20a[11..11].out, ( sft20a[10..10].out, ( sft24a[7..7].out, ( sft28a[4..4].out, ( sft28a[3..3].out, ( sft28a[2..2].out, ( sft28a[1..1].out, ( sft28a[0..0].out, ( sft24a[1..1].out, ( sft24a[0..0].out, ( sft20a[1..1].out, ( sft20a[0..0].out, ( w84w[0..0], ( w64w[0..0], ( w60w[0..0], w44w[0..0])))))))))))))))))))));
	sft12a[].in = add9_result[];
	sft14a[].in = ( w585w, ( w468w[0..0], ( w464w[0..0], ( (! w523w[0..0]), ( (! w518w[0..0]), ( w452w[0..0], ( w448w[0..0], ( w392w[0..0], ( w388w[0..0], ( w215w[0..0], ( w332w[0..0], ( w284w[0..0], ( w280w[0..0], ( w236w[0..0], ( w232w[0..0], ( w192w[0..0], ( w188w[0..0], w152w[0..0])))))))))))))))));
	sft15a[].in = ( w585w, ( w585w, ( w412w[0..0], ( w359w[0..0], ( w356w[0..0], ( w307w[0..0], ( w304w[0..0], ( w259w[0..0], ( w256w[0..0], ( sft32a[1..1].out, ( sft32a[0..0].out, ( w175w[0..0], ( w172w[0..0], ( w139w[0..0], ( w136w[0..0], ( w107w[0..0], ( w104w[0..0], w79w[0..0])))))))))))))))));
	sft16a[].in = add13_result[];
	sft18a[].in = ( w585w, ( w400w[0..0], ( (! w508w[0..0]), ( (! w503w[0..0]), ( (! w498w[0..0]), ( w436w[0..0], ( w432w[0..0], ( w376w[0..0], ( w372w[0..0], ( w320w[0..0], ( w272w[0..0], w228w[0..0])))))))))));
	sft19a[].in = ( w585w, ( w585w, ( w264w[0..0], ( w300w[0..0], ( w296w[0..0], ( w252w[0..0], ( w248w[0..0], ( w208w[0..0], ( w204w[0..0], ( w168w[0..0], ( w112w[0..0], w88w[0..0])))))))))));
	sft20a[].in = add17_result[];
	sft22a[].in = ( w585w, ( w444w[0..0], ( w440w[0..0], ( w384w[0..0], ( w380w[0..0], ( w328w[0..0], ( w324w[0..0], w276w[0..0])))))));
	sft23a[].in = ( w585w, ( w224w[0..0], ( w220w[0..0], ( w184w[0..0], ( w180w[0..0], ( w148w[0..0], ( w144w[0..0], w116w[0..0])))))));
	sft24a[].in = add21_result[];
	sft26a[].in = ( w585w, ( w460w[0..0], ( w456w[0..0], ( (! w513w[0..0]), ( w348w[0..0], ( w344w[0..0], ( w340w[0..0], ( (! w493w[0..0]), ( (! w488w[0..0]), w428w[0..0])))))))));
	sft27a[].in = ( w585w, ( w585w, ( w312w[0..0], ( w268w[0..0], ( w396w[0..0], ( w585w, ( sft32a[2..2].out, ( w292w[0..0], ( w288w[0..0], w244w[0..0])))))))));
	sft28a[].in = add25_result[];
	sft2a[].in = ( w560w, ( w560w, ( w560w, ( (! w552w[0..0]), ( sft8a[23..23].out, ( sft8a[22..22].out, ( sft8a[21..21].out, ( sft8a[20..20].out, ( sft8a[19..19].out, ( sft8a[18..18].out, ( sft8a[17..17].out, ( sft8a[16..16].out, ( sft8a[15..15].out, ( sft8a[14..14].out, ( sft8a[13..13].out, ( sft8a[12..12].out, ( sft8a[11..11].out, ( sft8a[10..10].out, ( sft8a[9..9].out, ( sft8a[8..8].out, ( sft8a[7..7].out, ( sft8a[6..6].out, ( sft8a[5..5].out, ( sft8a[4..4].out, ( sft8a[3..3].out, ( sft8a[2..2].out, ( w40w[0..0], ( w28w[0..0], ( w24w[0..0], w15w[0..0])))))))))))))))))))))))))))));
	sft30a[].in = ( w585w, ( w336w[0..0], w560w));
	sft31a[].in = ( w585w, ( w585w, w212w[0..0]));
	sft32a[].in = add29_result[];
	sft3a[].in = ( w585w, ( sft8a[26..26].out, ( sft8a[25..25].out, ( sft8a[24..24].out, ( sft12a[21..21].out, ( sft12a[20..20].out, ( sft12a[19..19].out, ( sft12a[18..18].out, ( sft12a[17..17].out, ( sft12a[16..16].out, ( sft12a[15..15].out, ( sft12a[14..14].out, ( sft12a[13..13].out, ( sft12a[12..12].out, ( sft12a[11..11].out, ( sft12a[10..10].out, ( sft12a[9..9].out, ( sft12a[8..8].out, ( sft12a[7..7].out, ( sft12a[6..6].out, ( sft12a[5..5].out, ( sft12a[4..4].out, ( sft12a[3..3].out, ( sft12a[2..2].out, ( sft12a[1..1].out, ( sft12a[0..0].out, ( sft8a[1..1].out, ( sft8a[0..0].out, ( w32w[0..0], w19w[0..0])))))))))))))))))))))))))))));
	sft4a[].in = add1_result[];
	sft6a[].in = ( w585w, ( w558w[0..0], ( w484w[0..0], ( w480w[0..0], ( (! w543w[0..0]), ( (! w538w[0..0]), ( w415w[0..0], ( w364w[0..0], ( w408w[0..0], ( w404w[0..0], ( w352w[0..0], ( sft16a[11..11].out, ( sft16a[10..10].out, ( sft16a[9..9].out, ( sft16a[8..8].out, ( sft16a[7..7].out, ( sft16a[6..6].out, ( sft16a[5..5].out, ( sft16a[4..4].out, ( w164w[0..0], ( w132w[0..0], ( w128w[0..0], ( w100w[0..0], ( w96w[0..0], ( w72w[0..0], ( w68w[0..0], w48w[0..0]))))))))))))))))))))))))));
	sft7a[].in = ( w585w, ( w585w, ( w585w, ( (! w548w[0..0]), ( w475w[0..0], ( w472w[0..0], ( sft16a[16..16].out, ( sft16a[15..15].out, ( sft16a[14..14].out, ( sft16a[13..13].out, ( sft16a[12..12].out, ( sft28a[5..5].out, ( sft20a[8..8].out, ( sft20a[7..7].out, ( sft20a[6..6].out, ( sft20a[5..5].out, ( sft20a[4..4].out, ( sft20a[3..3].out, ( sft20a[2..2].out, ( sft16a[3..3].out, ( sft16a[2..2].out, ( sft16a[1..1].out, ( sft16a[0..0].out, ( w76w[0..0], ( w55w[0..0], ( w52w[0..0], w35w[0..0]))))))))))))))))))))))))));
	sft8a[].in = add5_result[];
	result[] = ( w961w[31..2], B"0", data[0..0]);
	w100w[] = (data[6..6] & data[2..2]);
	w104w[] = (data[6..6] & data[3..3]);
	w107w[] = (data[6..6] & data[4..4]);
	w112w[] = (data[6..6] & (! data[5..5]));
	w116w[] = (data[6..6] & data[5..5]);
	w11w[] = (data[1..1] & (! data[0..0]));
	w120w[] = (data[7..7] & data[0..0]);
	w124w[] = (data[7..7] & data[1..1]);
	w128w[] = (data[7..7] & data[2..2]);
	w132w[] = (data[7..7] & data[3..3]);
	w136w[] = (data[7..7] & data[4..4]);
	w139w[] = (data[7..7] & data[5..5]);
	w144w[] = (data[7..7] & (! data[6..6]));
	w148w[] = (data[7..7] & data[6..6]);
	w152w[] = (data[8..8] & data[0..0]);
	w156w[] = (data[8..8] & data[1..1]);
	w15w[] = (data[1..1] & data[0..0]);
	w160w[] = (data[8..8] & data[2..2]);
	w164w[] = (data[8..8] & data[3..3]);
	w168w[] = (data[8..8] & data[4..4]);
	w172w[] = (data[8..8] & data[5..5]);
	w175w[] = (data[8..8] & data[6..6]);
	w180w[] = (data[8..8] & (! data[7..7]));
	w184w[] = (data[8..8] & data[7..7]);
	w188w[] = (data[9..9] & data[0..0]);
	w192w[] = (data[9..9] & data[1..1]);
	w196w[] = (data[9..9] & data[2..2]);
	w19w[] = (data[2..2] & data[0..0]);
	w200w[] = (data[9..9] & data[3..3]);
	w204w[] = (data[9..9] & data[4..4]);
	w208w[] = (data[9..9] & data[5..5]);
	w212w[] = (data[9..9] & data[6..6]);
	w215w[] = (data[9..9] & data[7..7]);
	w220w[] = (data[9..9] & (! data[8..8]));
	w224w[] = (data[9..9] & data[8..8]);
	w228w[] = (data[10..10] & data[0..0]);
	w232w[] = (data[10..10] & data[1..1]);
	w236w[] = (data[10..10] & data[2..2]);
	w240w[] = (data[10..10] & data[3..3]);
	w244w[] = (data[10..10] & data[4..4]);
	w248w[] = (data[10..10] & data[5..5]);
	w24w[] = (data[2..2] & (! data[1..1]));
	w252w[] = (data[10..10] & data[6..6]);
	w256w[] = (data[10..10] & data[7..7]);
	w259w[] = (data[10..10] & data[8..8]);
	w264w[] = (data[10..10] & (! data[9..9]));
	w268w[] = (data[10..10] & data[9..9]);
	w272w[] = (data[11..11] & data[0..0]);
	w276w[] = (data[11..11] & data[1..1]);
	w280w[] = (data[11..11] & data[2..2]);
	w284w[] = (data[11..11] & data[3..3]);
	w288w[] = (data[11..11] & data[4..4]);
	w28w[] = (data[2..2] & data[1..1]);
	w292w[] = (data[11..11] & data[5..5]);
	w296w[] = (data[11..11] & data[6..6]);
	w300w[] = (data[11..11] & data[7..7]);
	w304w[] = (data[11..11] & data[8..8]);
	w307w[] = (data[11..11] & data[9..9]);
	w312w[] = (data[11..11] & (! data[10..10]));
	w316w[] = (data[11..11] & data[10..10]);
	w320w[] = (data[12..12] & data[0..0]);
	w324w[] = (data[12..12] & data[1..1]);
	w328w[] = (data[12..12] & data[2..2]);
	w32w[] = (data[3..3] & data[0..0]);
	w332w[] = (data[12..12] & data[3..3]);
	w336w[] = (data[12..12] & data[4..4]);
	w340w[] = (data[12..12] & data[5..5]);
	w344w[] = (data[12..12] & data[6..6]);
	w348w[] = (data[12..12] & data[7..7]);
	w352w[] = (data[12..12] & data[8..8]);
	w356w[] = (data[12..12] & data[9..9]);
	w359w[] = (data[12..12] & data[10..10]);
	w35w[] = (data[3..3] & data[1..1]);
	w364w[] = (data[12..12] & (! data[11..11]));
	w368w[] = (data[12..12] & data[11..11]);
	w372w[] = (data[13..13] & data[0..0]);
	w376w[] = (data[13..13] & data[1..1]);
	w380w[] = (data[13..13] & data[2..2]);
	w384w[] = (data[13..13] & data[3..3]);
	w388w[] = (data[13..13] & data[4..4]);
	w392w[] = (data[13..13] & data[5..5]);
	w396w[] = (data[13..13] & data[6..6]);
	w400w[] = (data[13..13] & data[7..7]);
	w404w[] = (data[13..13] & data[8..8]);
	w408w[] = (data[13..13] & data[9..9]);
	w40w[] = (data[3..3] & (! data[2..2]));
	w412w[] = (data[13..13] & data[10..10]);
	w415w[] = (data[13..13] & data[11..11]);
	w420w[] = (data[13..13] & (! data[12..12]));
	w424w[] = (data[13..13] & data[12..12]);
	w428w[] = (data[14..14] & data[0..0]);
	w432w[] = (data[14..14] & data[1..1]);
	w436w[] = (data[14..14] & data[2..2]);
	w440w[] = (data[14..14] & data[3..3]);
	w444w[] = (data[14..14] & data[4..4]);
	w448w[] = (data[14..14] & data[5..5]);
	w44w[] = (data[3..3] & data[2..2]);
	w452w[] = (data[14..14] & data[6..6]);
	w456w[] = (data[14..14] & data[7..7]);
	w460w[] = (data[14..14] & data[8..8]);
	w464w[] = (data[14..14] & data[9..9]);
	w468w[] = (data[14..14] & data[10..10]);
	w472w[] = (data[14..14] & data[11..11]);
	w475w[] = (data[14..14] & data[12..12]);
	w480w[] = (data[14..14] & (! data[13..13]));
	w484w[] = (data[14..14] & data[13..13]);
	w488w[] = (data[15..15] & data[0..0]);
	w48w[] = (data[4..4] & data[0..0]);
	w493w[] = (data[15..15] & data[1..1]);
	w498w[] = (data[15..15] & data[2..2]);
	w503w[] = (data[15..15] & data[3..3]);
	w508w[] = (data[15..15] & data[4..4]);
	w513w[] = (data[15..15] & data[5..5]);
	w518w[] = (data[15..15] & data[6..6]);
	w523w[] = (data[15..15] & data[7..7]);
	w528w[] = (data[15..15] & data[8..8]);
	w52w[] = (data[4..4] & data[1..1]);
	w533w[] = (data[15..15] & data[9..9]);
	w538w[] = (data[15..15] & data[10..10]);
	w543w[] = (data[15..15] & data[11..11]);
	w548w[] = (data[15..15] & data[12..12]);
	w552w[] = (data[15..15] & data[13..13]);
	w558w[] = (data[15..15] & (! data[14..14]));
	w55w[] = (data[4..4] & data[2..2]);
	w560w = B"1";
	w585w = B"0";
	w60w[] = (data[4..4] & (! data[3..3]));
	w64w[] = (data[4..4] & data[3..3]);
	w68w[] = (data[5..5] & data[0..0]);
	w72w[] = (data[5..5] & data[1..1]);
	w76w[] = (data[5..5] & data[2..2]);
	w79w[] = (data[5..5] & data[3..3]);
	w84w[] = (data[5..5] & (! data[4..4]));
	w88w[] = (data[5..5] & data[4..4]);
	w92w[] = (data[6..6] & data[0..0]);
	w961w[] = ( sft4a[29..28].out, sft4a[27..26].out, sft4a[25..24].out, sft4a[23..22].out, sft4a[21..20].out, sft4a[19..18].out, sft4a[17..16].out, sft4a[15..14].out, sft4a[13..12].out, sft4a[11..10].out, sft4a[9..8].out, sft4a[7..6].out, sft4a[5..4].out, sft4a[3..2].out, sft4a[1..0].out, w11w[0..0], w585w, w585w);
	w96w[] = (data[6..6] & data[1..1]);
END;
--VALID FILE
